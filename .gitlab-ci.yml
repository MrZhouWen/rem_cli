stages:
  - build
variables:
  DEPLOY_NOTIFY_API: 'http://deploy.oa.com/Page/imageVersion'
  IMAGE_TAG: '$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG'
before_script:
  - 'docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY'
tag_build_1000040:
  stage: build
  tags:
    - build_docker_images
  script:
    - COMPOSER_CACHE_DIR=$HOME/.cache/composer
    - '[ -d $COMPOSER_CACHE_DIR ] || mkdir -p $COMPOSER_CACHE_DIR'
    - '[ ! -f composer.json ] || { docker pull registry.chelun.com:80/images/composer:latest && docker run --rm --user $(id -u):$(id -g) -e COMPOSER_CACHE_DIR=$COMPOSER_CACHE_DIR -v $COMPOSER_CACHE_DIR:$COMPOSER_CACHE_DIR -v /etc/passwd:/etc/passwd:ro -v /etc/group:/etc/group:ro -v $HOME/.ssh:$HOME/.ssh -v $PWD:/app registry.chelun.com:80/images/composer:latest install --ignore-platform-reqs -vvv; }'
    - 'docker build -f Dockerfile --pull -t $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG . || curl -s "${DEPLOY_NOTIFY_API}?pid=1000040&gitlab_pid=${CI_PROJECT_ID}&git_version=${CI_COMMIT_TAG}&image_version=${CI_COMMIT_TAG}&status=20"'
    - 'docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG'
    - 'curl -s "${DEPLOY_NOTIFY_API}?pid=1000040&gitlab_pid=${CI_PROJECT_ID}&git_version=${CI_COMMIT_TAG}&image_version=${CI_COMMIT_TAG}&status=10"'
  only:
    variables:
      - $CI_COMMIT_TAG
develop_branch_build_1000040:
  stage: build
  tags:
    - build_docker_images
  script:
    - COMPOSER_CACHE_DIR=$HOME/.cache/composer
    - '[ -d $COMPOSER_CACHE_DIR ] || mkdir -p $COMPOSER_CACHE_DIR'
    - '[ ! -f composer.json ] || { docker pull registry.chelun.com:80/images/composer:latest && docker run --rm --user $(id -u):$(id -g) -e COMPOSER_CACHE_DIR=$COMPOSER_CACHE_DIR -v $COMPOSER_CACHE_DIR:$COMPOSER_CACHE_DIR -v /etc/passwd:/etc/passwd:ro -v /etc/group:/etc/group:ro -v $HOME/.ssh:$HOME/.ssh -v $PWD:/app registry.chelun.com:80/images/composer:latest install --ignore-platform-reqs -vvv; }'
    - 'docker build -f Dockerfile  --pull -t $CI_REGISTRY_IMAGE:${CI_COMMIT_SHA:0:8} . || curl -s "${DEPLOY_NOTIFY_API}?pid=1000040&gitlab_pid=${CI_PROJECT_ID}&git_version=${CI_COMMIT_SHA:0:8}&image_version=${CI_COMMIT_SHA:0:8}&status=20&t=3"'
    - 'docker push $CI_REGISTRY_IMAGE:${CI_COMMIT_SHA:0:8}'
    - 'curl -s "${DEPLOY_NOTIFY_API}?pid=1000040&gitlab_pid=${CI_PROJECT_ID}&git_version=${CI_COMMIT_SHA:0:8}&image_version=${CI_COMMIT_SHA:0:8}&status=10&t=3"'
  only:
    - develop
tag_build_1000041:
  stage: build
  tags:
    - build_docker_images
  script:
    - COMPOSER_CACHE_DIR=$HOME/.cache/composer
    - '[ -d $COMPOSER_CACHE_DIR ] || mkdir -p $COMPOSER_CACHE_DIR'
    - '[ ! -f composer.json ] || { docker pull registry.chelun.com:80/images/composer:latest && docker run --rm --user $(id -u):$(id -g) -e COMPOSER_CACHE_DIR=$COMPOSER_CACHE_DIR -v $COMPOSER_CACHE_DIR:$COMPOSER_CACHE_DIR -v /etc/passwd:/etc/passwd:ro -v /etc/group:/etc/group:ro -v $HOME/.ssh:$HOME/.ssh -v $PWD:/app registry.chelun.com:80/images/composer:latest install --ignore-platform-reqs -vvv; }'
    - 'docker build -f Dockerfile --pull -t $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG . || curl -s "${DEPLOY_NOTIFY_API}?pid=1000041&gitlab_pid=${CI_PROJECT_ID}&git_version=${CI_COMMIT_TAG}&image_version=${CI_COMMIT_TAG}&status=20"'
    - 'docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG'
    - 'curl -s "${DEPLOY_NOTIFY_API}?pid=1000041&gitlab_pid=${CI_PROJECT_ID}&git_version=${CI_COMMIT_TAG}&image_version=${CI_COMMIT_TAG}&status=10"'
  only:
    variables:
      - $CI_COMMIT_TAG
develop_branch_build_1000041:
  stage: build
  tags:
    - build_docker_images
  script:
    - COMPOSER_CACHE_DIR=$HOME/.cache/composer
    - '[ -d $COMPOSER_CACHE_DIR ] || mkdir -p $COMPOSER_CACHE_DIR'
    - '[ ! -f composer.json ] || { docker pull registry.chelun.com:80/images/composer:latest && docker run --rm --user $(id -u):$(id -g) -e COMPOSER_CACHE_DIR=$COMPOSER_CACHE_DIR -v $COMPOSER_CACHE_DIR:$COMPOSER_CACHE_DIR -v /etc/passwd:/etc/passwd:ro -v /etc/group:/etc/group:ro -v $HOME/.ssh:$HOME/.ssh -v $PWD:/app registry.chelun.com:80/images/composer:latest install --ignore-platform-reqs -vvv; }'
    - 'docker build -f Dockerfile  --pull -t $CI_REGISTRY_IMAGE:${CI_COMMIT_SHA:0:8} . || curl -s "${DEPLOY_NOTIFY_API}?pid=1000041&gitlab_pid=${CI_PROJECT_ID}&git_version=${CI_COMMIT_SHA:0:8}&image_version=${CI_COMMIT_SHA:0:8}&status=20&t=3"'
    - 'docker push $CI_REGISTRY_IMAGE:${CI_COMMIT_SHA:0:8}'
    - 'curl -s "${DEPLOY_NOTIFY_API}?pid=1000041&gitlab_pid=${CI_PROJECT_ID}&git_version=${CI_COMMIT_SHA:0:8}&image_version=${CI_COMMIT_SHA:0:8}&status=10&t=3"'
  only:
    - develop
